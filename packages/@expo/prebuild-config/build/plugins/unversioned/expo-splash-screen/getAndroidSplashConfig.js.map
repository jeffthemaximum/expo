{"version":3,"file":"getAndroidSplashConfig.js","names":["defaultResizeMode","getAndroidSplashConfig","config","_config$android","android","splash","_config$android2","_ref","_splash$xxxhdpi","_ref2","_splash$xxhdpi","_ref3","_splash$xhdpi","_ref4","_splash$hdpi","_ref5","_splash$mdpi","_splash$backgroundCol","_splash$resizeMode","_splash$fadeTime","xxxhdpi","image","xxhdpi","xhdpi","hdpi","mdpi","backgroundColor","resizeMode","fadeTime","_splash$image","_splash$image2","_splash$image3","_splash$image4","_splash$image5","_splash$backgroundCol2","_splash$resizeMode2","_splash$fadeTime2","getAndroidDarkSplashConfig","_config$android3","_config$android3$spla","dark","_config$android4","_config$android4$spla","_ref6","_splash$xxxhdpi2","_ref7","_splash$xxhdpi2","_ref8","_splash$xhdpi2","_ref9","_splash$hdpi2","_ref10","_splash$mdpi2","_splash$backgroundCol3","_lightTheme$resizeMod","_splash$fadeTime3","lightTheme"],"sources":["../../../../src/plugins/unversioned/expo-splash-screen/getAndroidSplashConfig.ts"],"sourcesContent":["import { ExpoConfig } from '@expo/config-types';\n\nexport interface AndroidSplashConfig {\n  xxxhdpi: string | null;\n  xxhdpi: string | null;\n  xhdpi: string | null;\n  hdpi: string | null;\n  mdpi: string | null;\n  backgroundColor: string | null;\n  resizeMode: 'contain' | 'cover' | 'native';\n  fadeTime: number;\n}\n\nconst defaultResizeMode = 'contain';\n\nexport function getAndroidSplashConfig(\n  config: Pick<ExpoConfig, 'splash' | 'android'>\n): AndroidSplashConfig | null {\n  // Respect the splash screen object, don't mix and match across different splash screen objects\n  // in case the user wants the top level splash to apply to every platform except android.\n  if (config.android?.splash) {\n    const splash = config.android?.splash;\n    return {\n      xxxhdpi: splash.xxxhdpi ?? splash.image ?? null,\n      xxhdpi: splash.xxhdpi ?? splash.image ?? null,\n      xhdpi: splash.xhdpi ?? splash.image ?? null,\n      hdpi: splash.hdpi ?? splash.image ?? null,\n      mdpi: splash.mdpi ?? splash.image ?? null,\n      backgroundColor: splash.backgroundColor ?? null,\n      resizeMode: splash.resizeMode ?? defaultResizeMode,\n      fadeTime: splash['fadeTime'] ?? 0,\n    };\n  }\n\n  if (config.splash) {\n    const splash = config.splash;\n    return {\n      xxxhdpi: splash.image ?? null,\n      xxhdpi: splash.image ?? null,\n      xhdpi: splash.image ?? null,\n      hdpi: splash.image ?? null,\n      mdpi: splash.image ?? null,\n      backgroundColor: splash.backgroundColor ?? null,\n      resizeMode: splash.resizeMode ?? defaultResizeMode,\n      fadeTime: splash['fadeTime'] ?? 0,\n    };\n  }\n\n  return {\n    xxxhdpi: null,\n    xxhdpi: null,\n    xhdpi: null,\n    hdpi: null,\n    mdpi: null,\n    backgroundColor: null,\n    resizeMode: defaultResizeMode,\n    fadeTime: 0,\n  };\n}\n\n// TODO: dark isn't supported in the Expo config spec yet.\nexport function getAndroidDarkSplashConfig(\n  config: Pick<ExpoConfig, 'splash' | 'android'>\n): AndroidSplashConfig | null {\n  // Respect the splash screen object, don't mix and match across different splash screen objects\n  // in case the user wants the top level splash to apply to every platform except android.\n  if (config.android?.splash?.dark) {\n    const splash = config.android?.splash?.dark;\n    const lightTheme = getAndroidSplashConfig(config);\n    return {\n      xxxhdpi: splash.xxxhdpi ?? splash.image ?? null,\n      xxhdpi: splash.xxhdpi ?? splash.image ?? null,\n      xhdpi: splash.xhdpi ?? splash.image ?? null,\n      hdpi: splash.hdpi ?? splash.image ?? null,\n      mdpi: splash.mdpi ?? splash.image ?? null,\n      backgroundColor: splash.backgroundColor ?? null,\n      // Can't support dark resizeMode because the resize mode is hardcoded into the MainActivity.java\n      resizeMode: lightTheme?.resizeMode ?? defaultResizeMode,\n      fadeTime: splash['fadeTime'] ?? 0,\n    };\n  }\n\n  return null;\n}\n"],"mappings":"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"}